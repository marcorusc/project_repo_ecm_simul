Terminals unused in grammar

    NODE


Grammatica

    0 $accept: translation_unit $end

    1 translation_unit: decl
    2                 | translation_unit decl

    3 decl: var_decl
    4     | runconfig_decl
    5     | node_attr_decl
    6     | ';'

    7 runconfig_decl: SYMBOL '=' expression ';'

    8 node_attr_decl: SYMBOL '.' SYMBOL '=' expression ';'
    9               | symbol_istate_list '.' SYMBOL '=' istate_expression_list ';'

   10 symbol_istate_list: '[' symbol_list ']'

   11 symbol_list: SYMBOL
   12            | symbol_list ',' SYMBOL

   13 istate_expression_list: istate_expression
   14                       | istate_expression_list ',' istate_expression

   15 istate_expression: primary_expression '[' expression_list ']'

   16 expression_list: primary_expression
   17                | expression_list ',' primary_expression

   18 var_decl: VARIABLE '=' expression ';'

   19 primary_expression: INTEGER
   20                   | DOUBLE
   21                   | VARIABLE
   22                   | '(' expression ')'

   23 argument_expression_list: expression
   24                         | argument_expression_list ',' expression

   25 postfix_expression: primary_expression
   26                   | SYMBOL '(' argument_expression_list ')'
   27                   | SYMBOL '(' ')'

   28 unary_expression: postfix_expression
   29                 | '+' unary_expression
   30                 | '-' unary_expression
   31                 | '!' unary_expression
   32                 | LOGNOT unary_expression

   33 multiplicative_expression: unary_expression
   34                          | multiplicative_expression '*' unary_expression
   35                          | multiplicative_expression '/' unary_expression

   36 additive_expression: multiplicative_expression
   37                    | additive_expression '+' multiplicative_expression
   38                    | additive_expression '-' multiplicative_expression

   39 relational_expression: additive_expression
   40                      | relational_expression '<' additive_expression
   41                      | relational_expression '>' additive_expression
   42                      | relational_expression LTEQ additive_expression
   43                      | relational_expression GTEQ additive_expression

   44 equality_expression: relational_expression
   45                    | equality_expression EQUAL relational_expression
   46                    | equality_expression NOT_EQUAL relational_expression

   47 logical_and_expression: equality_expression
   48                       | logical_and_expression LOGAND equality_expression

   49 logical_or_expression: logical_and_expression
   50                      | logical_or_expression LOGOR logical_and_expression

   51 logical_xor_expression: logical_or_expression
   52                       | logical_xor_expression LOGXOR logical_or_expression
   53                       | logical_xor_expression '^' logical_or_expression

   54 conditional_expression: logical_xor_expression
   55                       | logical_xor_expression '?' expression ':' conditional_expression

   56 expression: conditional_expression


Simboli terminali e regole in cui appaiono

    $end (0) 0
    '!' (33) 31
    '(' (40) 22 26 27
    ')' (41) 22 26 27
    '*' (42) 34
    '+' (43) 29 37
    ',' (44) 12 14 17 24
    '-' (45) 30 38
    '.' (46) 8 9
    '/' (47) 35
    ':' (58) 55
    ';' (59) 6 7 8 9 18
    '<' (60) 40
    '=' (61) 7 8 9 18
    '>' (62) 41
    '?' (63) 55
    '[' (91) 10 15
    ']' (93) 10 15
    '^' (94) 53
    error (256)
    VARIABLE <str> (258) 18 21
    SYMBOL <str> (259) 7 8 9 11 12 26 27
    DOUBLE <d> (260) 20
    INTEGER <l> (261) 19
    LOGAND (262) 48
    LOGOR (263) 50
    LOGXOR (264) 52
    LOGNOT (265) 32
    EQUAL (266) 45
    NOT_EQUAL (267) 46
    NODE (268)
    GTEQ (269) 43
    LTEQ (270) 42


Simboli nonterminali e regole in cui appaiono

    $accept (34)
        on left: 0
    translation_unit (35)
        on left: 1 2
        on right: 0 2
    decl (36)
        on left: 3 4 5 6
        on right: 1 2
    runconfig_decl (37)
        on left: 7
        on right: 4
    node_attr_decl (38)
        on left: 8 9
        on right: 5
    symbol_istate_list <node_list> (39)
        on left: 10
        on right: 9
    symbol_list <node_list> (40)
        on left: 11 12
        on right: 10 12
    istate_expression_list <istate_expr_list> (41)
        on left: 13 14
        on right: 9 14
    istate_expression <istate_expr> (42)
        on left: 15
        on right: 13 14
    expression_list <expr_list> (43)
        on left: 16 17
        on right: 15 17
    var_decl (44)
        on left: 18
        on right: 3
    primary_expression <expr> (45)
        on left: 19 20 21 22
        on right: 15 16 17 25
    argument_expression_list <arg_list> (46)
        on left: 23 24
        on right: 24 26
    postfix_expression <expr> (47)
        on left: 25 26 27
        on right: 28
    unary_expression <expr> (48)
        on left: 28 29 30 31 32
        on right: 29 30 31 32 33 34 35
    multiplicative_expression <expr> (49)
        on left: 33 34 35
        on right: 34 35 36 37 38
    additive_expression <expr> (50)
        on left: 36 37 38
        on right: 37 38 39 40 41 42 43
    relational_expression <expr> (51)
        on left: 39 40 41 42 43
        on right: 40 41 42 43 44 45 46
    equality_expression <expr> (52)
        on left: 44 45 46
        on right: 45 46 47 48
    logical_and_expression <expr> (53)
        on left: 47 48
        on right: 48 49 50
    logical_or_expression <expr> (54)
        on left: 49 50
        on right: 50 51 52 53
    logical_xor_expression <expr> (55)
        on left: 51 52 53
        on right: 52 53 54 55
    conditional_expression <expr> (56)
        on left: 54 55
        on right: 55 56
    expression <expr> (57)
        on left: 56
        on right: 7 8 18 22 23 24 55


Stato 0

    0 $accept: . translation_unit $end

    VARIABLE  shift e prosecuzione allo stato 1
    SYMBOL    shift e prosecuzione allo stato 2
    ';'       shift e prosecuzione allo stato 3
    '['       shift e prosecuzione allo stato 4

    translation_unit    prosecuzione allo stato 5
    decl                prosecuzione allo stato 6
    runconfig_decl      prosecuzione allo stato 7
    node_attr_decl      prosecuzione allo stato 8
    symbol_istate_list  prosecuzione allo stato 9
    var_decl            prosecuzione allo stato 10


Stato 1

   18 var_decl: VARIABLE . '=' expression ';'

    '='  shift e prosecuzione allo stato 11


Stato 2

    7 runconfig_decl: SYMBOL . '=' expression ';'
    8 node_attr_decl: SYMBOL . '.' SYMBOL '=' expression ';'

    '='  shift e prosecuzione allo stato 12
    '.'  shift e prosecuzione allo stato 13


Stato 3

    6 decl: ';' .

    $default  riduzione con la regola 6 (decl)


Stato 4

   10 symbol_istate_list: '[' . symbol_list ']'

    SYMBOL  shift e prosecuzione allo stato 14

    symbol_list  prosecuzione allo stato 15


Stato 5

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . decl

    $end      shift e prosecuzione allo stato 16
    VARIABLE  shift e prosecuzione allo stato 1
    SYMBOL    shift e prosecuzione allo stato 2
    ';'       shift e prosecuzione allo stato 3
    '['       shift e prosecuzione allo stato 4

    decl                prosecuzione allo stato 17
    runconfig_decl      prosecuzione allo stato 7
    node_attr_decl      prosecuzione allo stato 8
    symbol_istate_list  prosecuzione allo stato 9
    var_decl            prosecuzione allo stato 10


Stato 6

    1 translation_unit: decl .

    $default  riduzione con la regola 1 (translation_unit)


Stato 7

    4 decl: runconfig_decl .

    $default  riduzione con la regola 4 (decl)


Stato 8

    5 decl: node_attr_decl .

    $default  riduzione con la regola 5 (decl)


Stato 9

    9 node_attr_decl: symbol_istate_list . '.' SYMBOL '=' istate_expression_list ';'

    '.'  shift e prosecuzione allo stato 18


Stato 10

    3 decl: var_decl .

    $default  riduzione con la regola 3 (decl)


Stato 11

   18 var_decl: VARIABLE '=' . expression ';'

    VARIABLE  shift e prosecuzione allo stato 19
    SYMBOL    shift e prosecuzione allo stato 20
    DOUBLE    shift e prosecuzione allo stato 21
    INTEGER   shift e prosecuzione allo stato 22
    LOGNOT    shift e prosecuzione allo stato 23
    '('       shift e prosecuzione allo stato 24
    '+'       shift e prosecuzione allo stato 25
    '-'       shift e prosecuzione allo stato 26
    '!'       shift e prosecuzione allo stato 27

    primary_expression         prosecuzione allo stato 28
    postfix_expression         prosecuzione allo stato 29
    unary_expression           prosecuzione allo stato 30
    multiplicative_expression  prosecuzione allo stato 31
    additive_expression        prosecuzione allo stato 32
    relational_expression      prosecuzione allo stato 33
    equality_expression        prosecuzione allo stato 34
    logical_and_expression     prosecuzione allo stato 35
    logical_or_expression      prosecuzione allo stato 36
    logical_xor_expression     prosecuzione allo stato 37
    conditional_expression     prosecuzione allo stato 38
    expression                 prosecuzione allo stato 39


Stato 12

    7 runconfig_decl: SYMBOL '=' . expression ';'

    VARIABLE  shift e prosecuzione allo stato 19
    SYMBOL    shift e prosecuzione allo stato 20
    DOUBLE    shift e prosecuzione allo stato 21
    INTEGER   shift e prosecuzione allo stato 22
    LOGNOT    shift e prosecuzione allo stato 23
    '('       shift e prosecuzione allo stato 24
    '+'       shift e prosecuzione allo stato 25
    '-'       shift e prosecuzione allo stato 26
    '!'       shift e prosecuzione allo stato 27

    primary_expression         prosecuzione allo stato 28
    postfix_expression         prosecuzione allo stato 29
    unary_expression           prosecuzione allo stato 30
    multiplicative_expression  prosecuzione allo stato 31
    additive_expression        prosecuzione allo stato 32
    relational_expression      prosecuzione allo stato 33
    equality_expression        prosecuzione allo stato 34
    logical_and_expression     prosecuzione allo stato 35
    logical_or_expression      prosecuzione allo stato 36
    logical_xor_expression     prosecuzione allo stato 37
    conditional_expression     prosecuzione allo stato 38
    expression                 prosecuzione allo stato 40


Stato 13

    8 node_attr_decl: SYMBOL '.' . SYMBOL '=' expression ';'

    SYMBOL  shift e prosecuzione allo stato 41


Stato 14

   11 symbol_list: SYMBOL .

    $default  riduzione con la regola 11 (symbol_list)


Stato 15

   10 symbol_istate_list: '[' symbol_list . ']'
   12 symbol_list: symbol_list . ',' SYMBOL

    ']'  shift e prosecuzione allo stato 42
    ','  shift e prosecuzione allo stato 43


Stato 16

    0 $accept: translation_unit $end .

    $default  accetta


Stato 17

    2 translation_unit: translation_unit decl .

    $default  riduzione con la regola 2 (translation_unit)


Stato 18

    9 node_attr_decl: symbol_istate_list '.' . SYMBOL '=' istate_expression_list ';'

    SYMBOL  shift e prosecuzione allo stato 44


Stato 19

   21 primary_expression: VARIABLE .

    $default  riduzione con la regola 21 (primary_expression)


Stato 20

   26 postfix_expression: SYMBOL . '(' argument_expression_list ')'
   27                   | SYMBOL . '(' ')'

    '('  shift e prosecuzione allo stato 45


Stato 21

   20 primary_expression: DOUBLE .

    $default  riduzione con la regola 20 (primary_expression)


Stato 22

   19 primary_expression: INTEGER .

    $default  riduzione con la regola 19 (primary_expression)


Stato 23

   32 unary_expression: LOGNOT . unary_expression

    VARIABLE  shift e prosecuzione allo stato 19
    SYMBOL    shift e prosecuzione allo stato 20
    DOUBLE    shift e prosecuzione allo stato 21
    INTEGER   shift e prosecuzione allo stato 22
    LOGNOT    shift e prosecuzione allo stato 23
    '('       shift e prosecuzione allo stato 24
    '+'       shift e prosecuzione allo stato 25
    '-'       shift e prosecuzione allo stato 26
    '!'       shift e prosecuzione allo stato 27

    primary_expression  prosecuzione allo stato 28
    postfix_expression  prosecuzione allo stato 29
    unary_expression    prosecuzione allo stato 46


Stato 24

   22 primary_expression: '(' . expression ')'

    VARIABLE  shift e prosecuzione allo stato 19
    SYMBOL    shift e prosecuzione allo stato 20
    DOUBLE    shift e prosecuzione allo stato 21
    INTEGER   shift e prosecuzione allo stato 22
    LOGNOT    shift e prosecuzione allo stato 23
    '('       shift e prosecuzione allo stato 24
    '+'       shift e prosecuzione allo stato 25
    '-'       shift e prosecuzione allo stato 26
    '!'       shift e prosecuzione allo stato 27

    primary_expression         prosecuzione allo stato 28
    postfix_expression         prosecuzione allo stato 29
    unary_expression           prosecuzione allo stato 30
    multiplicative_expression  prosecuzione allo stato 31
    additive_expression        prosecuzione allo stato 32
    relational_expression      prosecuzione allo stato 33
    equality_expression        prosecuzione allo stato 34
    logical_and_expression     prosecuzione allo stato 35
    logical_or_expression      prosecuzione allo stato 36
    logical_xor_expression     prosecuzione allo stato 37
    conditional_expression     prosecuzione allo stato 38
    expression                 prosecuzione allo stato 47


Stato 25

   29 unary_expression: '+' . unary_expression

    VARIABLE  shift e prosecuzione allo stato 19
    SYMBOL    shift e prosecuzione allo stato 20
    DOUBLE    shift e prosecuzione allo stato 21
    INTEGER   shift e prosecuzione allo stato 22
    LOGNOT    shift e prosecuzione allo stato 23
    '('       shift e prosecuzione allo stato 24
    '+'       shift e prosecuzione allo stato 25
    '-'       shift e prosecuzione allo stato 26
    '!'       shift e prosecuzione allo stato 27

    primary_expression  prosecuzione allo stato 28
    postfix_expression  prosecuzione allo stato 29
    unary_expression    prosecuzione allo stato 48


Stato 26

   30 unary_expression: '-' . unary_expression

    VARIABLE  shift e prosecuzione allo stato 19
    SYMBOL    shift e prosecuzione allo stato 20
    DOUBLE    shift e prosecuzione allo stato 21
    INTEGER   shift e prosecuzione allo stato 22
    LOGNOT    shift e prosecuzione allo stato 23
    '('       shift e prosecuzione allo stato 24
    '+'       shift e prosecuzione allo stato 25
    '-'       shift e prosecuzione allo stato 26
    '!'       shift e prosecuzione allo stato 27

    primary_expression  prosecuzione allo stato 28
    postfix_expression  prosecuzione allo stato 29
    unary_expression    prosecuzione allo stato 49


Stato 27

   31 unary_expression: '!' . unary_expression

    VARIABLE  shift e prosecuzione allo stato 19
    SYMBOL    shift e prosecuzione allo stato 20
    DOUBLE    shift e prosecuzione allo stato 21
    INTEGER   shift e prosecuzione allo stato 22
    LOGNOT    shift e prosecuzione allo stato 23
    '('       shift e prosecuzione allo stato 24
    '+'       shift e prosecuzione allo stato 25
    '-'       shift e prosecuzione allo stato 26
    '!'       shift e prosecuzione allo stato 27

    primary_expression  prosecuzione allo stato 28
    postfix_expression  prosecuzione allo stato 29
    unary_expression    prosecuzione allo stato 50


Stato 28

   25 postfix_expression: primary_expression .

    $default  riduzione con la regola 25 (postfix_expression)


Stato 29

   28 unary_expression: postfix_expression .

    $default  riduzione con la regola 28 (unary_expression)


Stato 30

   33 multiplicative_expression: unary_expression .

    $default  riduzione con la regola 33 (multiplicative_expression)


Stato 31

   34 multiplicative_expression: multiplicative_expression . '*' unary_expression
   35                          | multiplicative_expression . '/' unary_expression
   36 additive_expression: multiplicative_expression .

    '*'  shift e prosecuzione allo stato 51
    '/'  shift e prosecuzione allo stato 52

    $default  riduzione con la regola 36 (additive_expression)


Stato 32

   37 additive_expression: additive_expression . '+' multiplicative_expression
   38                    | additive_expression . '-' multiplicative_expression
   39 relational_expression: additive_expression .

    '+'  shift e prosecuzione allo stato 53
    '-'  shift e prosecuzione allo stato 54

    $default  riduzione con la regola 39 (relational_expression)


Stato 33

   40 relational_expression: relational_expression . '<' additive_expression
   41                      | relational_expression . '>' additive_expression
   42                      | relational_expression . LTEQ additive_expression
   43                      | relational_expression . GTEQ additive_expression
   44 equality_expression: relational_expression .

    GTEQ  shift e prosecuzione allo stato 55
    LTEQ  shift e prosecuzione allo stato 56
    '<'   shift e prosecuzione allo stato 57
    '>'   shift e prosecuzione allo stato 58

    $default  riduzione con la regola 44 (equality_expression)


Stato 34

   45 equality_expression: equality_expression . EQUAL relational_expression
   46                    | equality_expression . NOT_EQUAL relational_expression
   47 logical_and_expression: equality_expression .

    EQUAL      shift e prosecuzione allo stato 59
    NOT_EQUAL  shift e prosecuzione allo stato 60

    $default  riduzione con la regola 47 (logical_and_expression)


Stato 35

   48 logical_and_expression: logical_and_expression . LOGAND equality_expression
   49 logical_or_expression: logical_and_expression .

    LOGAND  shift e prosecuzione allo stato 61

    $default  riduzione con la regola 49 (logical_or_expression)


Stato 36

   50 logical_or_expression: logical_or_expression . LOGOR logical_and_expression
   51 logical_xor_expression: logical_or_expression .

    LOGOR  shift e prosecuzione allo stato 62

    $default  riduzione con la regola 51 (logical_xor_expression)


Stato 37

   52 logical_xor_expression: logical_xor_expression . LOGXOR logical_or_expression
   53                       | logical_xor_expression . '^' logical_or_expression
   54 conditional_expression: logical_xor_expression .
   55                       | logical_xor_expression . '?' expression ':' conditional_expression

    LOGXOR  shift e prosecuzione allo stato 63
    '^'     shift e prosecuzione allo stato 64
    '?'     shift e prosecuzione allo stato 65

    $default  riduzione con la regola 54 (conditional_expression)


Stato 38

   56 expression: conditional_expression .

    $default  riduzione con la regola 56 (expression)


Stato 39

   18 var_decl: VARIABLE '=' expression . ';'

    ';'  shift e prosecuzione allo stato 66


Stato 40

    7 runconfig_decl: SYMBOL '=' expression . ';'

    ';'  shift e prosecuzione allo stato 67


Stato 41

    8 node_attr_decl: SYMBOL '.' SYMBOL . '=' expression ';'

    '='  shift e prosecuzione allo stato 68


Stato 42

   10 symbol_istate_list: '[' symbol_list ']' .

    $default  riduzione con la regola 10 (symbol_istate_list)


Stato 43

   12 symbol_list: symbol_list ',' . SYMBOL

    SYMBOL  shift e prosecuzione allo stato 69


Stato 44

    9 node_attr_decl: symbol_istate_list '.' SYMBOL . '=' istate_expression_list ';'

    '='  shift e prosecuzione allo stato 70


Stato 45

   26 postfix_expression: SYMBOL '(' . argument_expression_list ')'
   27                   | SYMBOL '(' . ')'

    VARIABLE  shift e prosecuzione allo stato 19
    SYMBOL    shift e prosecuzione allo stato 20
    DOUBLE    shift e prosecuzione allo stato 21
    INTEGER   shift e prosecuzione allo stato 22
    LOGNOT    shift e prosecuzione allo stato 23
    '('       shift e prosecuzione allo stato 24
    ')'       shift e prosecuzione allo stato 71
    '+'       shift e prosecuzione allo stato 25
    '-'       shift e prosecuzione allo stato 26
    '!'       shift e prosecuzione allo stato 27

    primary_expression         prosecuzione allo stato 28
    argument_expression_list   prosecuzione allo stato 72
    postfix_expression         prosecuzione allo stato 29
    unary_expression           prosecuzione allo stato 30
    multiplicative_expression  prosecuzione allo stato 31
    additive_expression        prosecuzione allo stato 32
    relational_expression      prosecuzione allo stato 33
    equality_expression        prosecuzione allo stato 34
    logical_and_expression     prosecuzione allo stato 35
    logical_or_expression      prosecuzione allo stato 36
    logical_xor_expression     prosecuzione allo stato 37
    conditional_expression     prosecuzione allo stato 38
    expression                 prosecuzione allo stato 73


Stato 46

   32 unary_expression: LOGNOT unary_expression .

    $default  riduzione con la regola 32 (unary_expression)


Stato 47

   22 primary_expression: '(' expression . ')'

    ')'  shift e prosecuzione allo stato 74


Stato 48

   29 unary_expression: '+' unary_expression .

    $default  riduzione con la regola 29 (unary_expression)


Stato 49

   30 unary_expression: '-' unary_expression .

    $default  riduzione con la regola 30 (unary_expression)


Stato 50

   31 unary_expression: '!' unary_expression .

    $default  riduzione con la regola 31 (unary_expression)


Stato 51

   34 multiplicative_expression: multiplicative_expression '*' . unary_expression

    VARIABLE  shift e prosecuzione allo stato 19
    SYMBOL    shift e prosecuzione allo stato 20
    DOUBLE    shift e prosecuzione allo stato 21
    INTEGER   shift e prosecuzione allo stato 22
    LOGNOT    shift e prosecuzione allo stato 23
    '('       shift e prosecuzione allo stato 24
    '+'       shift e prosecuzione allo stato 25
    '-'       shift e prosecuzione allo stato 26
    '!'       shift e prosecuzione allo stato 27

    primary_expression  prosecuzione allo stato 28
    postfix_expression  prosecuzione allo stato 29
    unary_expression    prosecuzione allo stato 75


Stato 52

   35 multiplicative_expression: multiplicative_expression '/' . unary_expression

    VARIABLE  shift e prosecuzione allo stato 19
    SYMBOL    shift e prosecuzione allo stato 20
    DOUBLE    shift e prosecuzione allo stato 21
    INTEGER   shift e prosecuzione allo stato 22
    LOGNOT    shift e prosecuzione allo stato 23
    '('       shift e prosecuzione allo stato 24
    '+'       shift e prosecuzione allo stato 25
    '-'       shift e prosecuzione allo stato 26
    '!'       shift e prosecuzione allo stato 27

    primary_expression  prosecuzione allo stato 28
    postfix_expression  prosecuzione allo stato 29
    unary_expression    prosecuzione allo stato 76


Stato 53

   37 additive_expression: additive_expression '+' . multiplicative_expression

    VARIABLE  shift e prosecuzione allo stato 19
    SYMBOL    shift e prosecuzione allo stato 20
    DOUBLE    shift e prosecuzione allo stato 21
    INTEGER   shift e prosecuzione allo stato 22
    LOGNOT    shift e prosecuzione allo stato 23
    '('       shift e prosecuzione allo stato 24
    '+'       shift e prosecuzione allo stato 25
    '-'       shift e prosecuzione allo stato 26
    '!'       shift e prosecuzione allo stato 27

    primary_expression         prosecuzione allo stato 28
    postfix_expression         prosecuzione allo stato 29
    unary_expression           prosecuzione allo stato 30
    multiplicative_expression  prosecuzione allo stato 77


Stato 54

   38 additive_expression: additive_expression '-' . multiplicative_expression

    VARIABLE  shift e prosecuzione allo stato 19
    SYMBOL    shift e prosecuzione allo stato 20
    DOUBLE    shift e prosecuzione allo stato 21
    INTEGER   shift e prosecuzione allo stato 22
    LOGNOT    shift e prosecuzione allo stato 23
    '('       shift e prosecuzione allo stato 24
    '+'       shift e prosecuzione allo stato 25
    '-'       shift e prosecuzione allo stato 26
    '!'       shift e prosecuzione allo stato 27

    primary_expression         prosecuzione allo stato 28
    postfix_expression         prosecuzione allo stato 29
    unary_expression           prosecuzione allo stato 30
    multiplicative_expression  prosecuzione allo stato 78


Stato 55

   43 relational_expression: relational_expression GTEQ . additive_expression

    VARIABLE  shift e prosecuzione allo stato 19
    SYMBOL    shift e prosecuzione allo stato 20
    DOUBLE    shift e prosecuzione allo stato 21
    INTEGER   shift e prosecuzione allo stato 22
    LOGNOT    shift e prosecuzione allo stato 23
    '('       shift e prosecuzione allo stato 24
    '+'       shift e prosecuzione allo stato 25
    '-'       shift e prosecuzione allo stato 26
    '!'       shift e prosecuzione allo stato 27

    primary_expression         prosecuzione allo stato 28
    postfix_expression         prosecuzione allo stato 29
    unary_expression           prosecuzione allo stato 30
    multiplicative_expression  prosecuzione allo stato 31
    additive_expression        prosecuzione allo stato 79


Stato 56

   42 relational_expression: relational_expression LTEQ . additive_expression

    VARIABLE  shift e prosecuzione allo stato 19
    SYMBOL    shift e prosecuzione allo stato 20
    DOUBLE    shift e prosecuzione allo stato 21
    INTEGER   shift e prosecuzione allo stato 22
    LOGNOT    shift e prosecuzione allo stato 23
    '('       shift e prosecuzione allo stato 24
    '+'       shift e prosecuzione allo stato 25
    '-'       shift e prosecuzione allo stato 26
    '!'       shift e prosecuzione allo stato 27

    primary_expression         prosecuzione allo stato 28
    postfix_expression         prosecuzione allo stato 29
    unary_expression           prosecuzione allo stato 30
    multiplicative_expression  prosecuzione allo stato 31
    additive_expression        prosecuzione allo stato 80


Stato 57

   40 relational_expression: relational_expression '<' . additive_expression

    VARIABLE  shift e prosecuzione allo stato 19
    SYMBOL    shift e prosecuzione allo stato 20
    DOUBLE    shift e prosecuzione allo stato 21
    INTEGER   shift e prosecuzione allo stato 22
    LOGNOT    shift e prosecuzione allo stato 23
    '('       shift e prosecuzione allo stato 24
    '+'       shift e prosecuzione allo stato 25
    '-'       shift e prosecuzione allo stato 26
    '!'       shift e prosecuzione allo stato 27

    primary_expression         prosecuzione allo stato 28
    postfix_expression         prosecuzione allo stato 29
    unary_expression           prosecuzione allo stato 30
    multiplicative_expression  prosecuzione allo stato 31
    additive_expression        prosecuzione allo stato 81


Stato 58

   41 relational_expression: relational_expression '>' . additive_expression

    VARIABLE  shift e prosecuzione allo stato 19
    SYMBOL    shift e prosecuzione allo stato 20
    DOUBLE    shift e prosecuzione allo stato 21
    INTEGER   shift e prosecuzione allo stato 22
    LOGNOT    shift e prosecuzione allo stato 23
    '('       shift e prosecuzione allo stato 24
    '+'       shift e prosecuzione allo stato 25
    '-'       shift e prosecuzione allo stato 26
    '!'       shift e prosecuzione allo stato 27

    primary_expression         prosecuzione allo stato 28
    postfix_expression         prosecuzione allo stato 29
    unary_expression           prosecuzione allo stato 30
    multiplicative_expression  prosecuzione allo stato 31
    additive_expression        prosecuzione allo stato 82


Stato 59

   45 equality_expression: equality_expression EQUAL . relational_expression

    VARIABLE  shift e prosecuzione allo stato 19
    SYMBOL    shift e prosecuzione allo stato 20
    DOUBLE    shift e prosecuzione allo stato 21
    INTEGER   shift e prosecuzione allo stato 22
    LOGNOT    shift e prosecuzione allo stato 23
    '('       shift e prosecuzione allo stato 24
    '+'       shift e prosecuzione allo stato 25
    '-'       shift e prosecuzione allo stato 26
    '!'       shift e prosecuzione allo stato 27

    primary_expression         prosecuzione allo stato 28
    postfix_expression         prosecuzione allo stato 29
    unary_expression           prosecuzione allo stato 30
    multiplicative_expression  prosecuzione allo stato 31
    additive_expression        prosecuzione allo stato 32
    relational_expression      prosecuzione allo stato 83


Stato 60

   46 equality_expression: equality_expression NOT_EQUAL . relational_expression

    VARIABLE  shift e prosecuzione allo stato 19
    SYMBOL    shift e prosecuzione allo stato 20
    DOUBLE    shift e prosecuzione allo stato 21
    INTEGER   shift e prosecuzione allo stato 22
    LOGNOT    shift e prosecuzione allo stato 23
    '('       shift e prosecuzione allo stato 24
    '+'       shift e prosecuzione allo stato 25
    '-'       shift e prosecuzione allo stato 26
    '!'       shift e prosecuzione allo stato 27

    primary_expression         prosecuzione allo stato 28
    postfix_expression         prosecuzione allo stato 29
    unary_expression           prosecuzione allo stato 30
    multiplicative_expression  prosecuzione allo stato 31
    additive_expression        prosecuzione allo stato 32
    relational_expression      prosecuzione allo stato 84


Stato 61

   48 logical_and_expression: logical_and_expression LOGAND . equality_expression

    VARIABLE  shift e prosecuzione allo stato 19
    SYMBOL    shift e prosecuzione allo stato 20
    DOUBLE    shift e prosecuzione allo stato 21
    INTEGER   shift e prosecuzione allo stato 22
    LOGNOT    shift e prosecuzione allo stato 23
    '('       shift e prosecuzione allo stato 24
    '+'       shift e prosecuzione allo stato 25
    '-'       shift e prosecuzione allo stato 26
    '!'       shift e prosecuzione allo stato 27

    primary_expression         prosecuzione allo stato 28
    postfix_expression         prosecuzione allo stato 29
    unary_expression           prosecuzione allo stato 30
    multiplicative_expression  prosecuzione allo stato 31
    additive_expression        prosecuzione allo stato 32
    relational_expression      prosecuzione allo stato 33
    equality_expression        prosecuzione allo stato 85


Stato 62

   50 logical_or_expression: logical_or_expression LOGOR . logical_and_expression

    VARIABLE  shift e prosecuzione allo stato 19
    SYMBOL    shift e prosecuzione allo stato 20
    DOUBLE    shift e prosecuzione allo stato 21
    INTEGER   shift e prosecuzione allo stato 22
    LOGNOT    shift e prosecuzione allo stato 23
    '('       shift e prosecuzione allo stato 24
    '+'       shift e prosecuzione allo stato 25
    '-'       shift e prosecuzione allo stato 26
    '!'       shift e prosecuzione allo stato 27

    primary_expression         prosecuzione allo stato 28
    postfix_expression         prosecuzione allo stato 29
    unary_expression           prosecuzione allo stato 30
    multiplicative_expression  prosecuzione allo stato 31
    additive_expression        prosecuzione allo stato 32
    relational_expression      prosecuzione allo stato 33
    equality_expression        prosecuzione allo stato 34
    logical_and_expression     prosecuzione allo stato 86


Stato 63

   52 logical_xor_expression: logical_xor_expression LOGXOR . logical_or_expression

    VARIABLE  shift e prosecuzione allo stato 19
    SYMBOL    shift e prosecuzione allo stato 20
    DOUBLE    shift e prosecuzione allo stato 21
    INTEGER   shift e prosecuzione allo stato 22
    LOGNOT    shift e prosecuzione allo stato 23
    '('       shift e prosecuzione allo stato 24
    '+'       shift e prosecuzione allo stato 25
    '-'       shift e prosecuzione allo stato 26
    '!'       shift e prosecuzione allo stato 27

    primary_expression         prosecuzione allo stato 28
    postfix_expression         prosecuzione allo stato 29
    unary_expression           prosecuzione allo stato 30
    multiplicative_expression  prosecuzione allo stato 31
    additive_expression        prosecuzione allo stato 32
    relational_expression      prosecuzione allo stato 33
    equality_expression        prosecuzione allo stato 34
    logical_and_expression     prosecuzione allo stato 35
    logical_or_expression      prosecuzione allo stato 87


Stato 64

   53 logical_xor_expression: logical_xor_expression '^' . logical_or_expression

    VARIABLE  shift e prosecuzione allo stato 19
    SYMBOL    shift e prosecuzione allo stato 20
    DOUBLE    shift e prosecuzione allo stato 21
    INTEGER   shift e prosecuzione allo stato 22
    LOGNOT    shift e prosecuzione allo stato 23
    '('       shift e prosecuzione allo stato 24
    '+'       shift e prosecuzione allo stato 25
    '-'       shift e prosecuzione allo stato 26
    '!'       shift e prosecuzione allo stato 27

    primary_expression         prosecuzione allo stato 28
    postfix_expression         prosecuzione allo stato 29
    unary_expression           prosecuzione allo stato 30
    multiplicative_expression  prosecuzione allo stato 31
    additive_expression        prosecuzione allo stato 32
    relational_expression      prosecuzione allo stato 33
    equality_expression        prosecuzione allo stato 34
    logical_and_expression     prosecuzione allo stato 35
    logical_or_expression      prosecuzione allo stato 88


Stato 65

   55 conditional_expression: logical_xor_expression '?' . expression ':' conditional_expression

    VARIABLE  shift e prosecuzione allo stato 19
    SYMBOL    shift e prosecuzione allo stato 20
    DOUBLE    shift e prosecuzione allo stato 21
    INTEGER   shift e prosecuzione allo stato 22
    LOGNOT    shift e prosecuzione allo stato 23
    '('       shift e prosecuzione allo stato 24
    '+'       shift e prosecuzione allo stato 25
    '-'       shift e prosecuzione allo stato 26
    '!'       shift e prosecuzione allo stato 27

    primary_expression         prosecuzione allo stato 28
    postfix_expression         prosecuzione allo stato 29
    unary_expression           prosecuzione allo stato 30
    multiplicative_expression  prosecuzione allo stato 31
    additive_expression        prosecuzione allo stato 32
    relational_expression      prosecuzione allo stato 33
    equality_expression        prosecuzione allo stato 34
    logical_and_expression     prosecuzione allo stato 35
    logical_or_expression      prosecuzione allo stato 36
    logical_xor_expression     prosecuzione allo stato 37
    conditional_expression     prosecuzione allo stato 38
    expression                 prosecuzione allo stato 89


Stato 66

   18 var_decl: VARIABLE '=' expression ';' .

    $default  riduzione con la regola 18 (var_decl)


Stato 67

    7 runconfig_decl: SYMBOL '=' expression ';' .

    $default  riduzione con la regola 7 (runconfig_decl)


Stato 68

    8 node_attr_decl: SYMBOL '.' SYMBOL '=' . expression ';'

    VARIABLE  shift e prosecuzione allo stato 19
    SYMBOL    shift e prosecuzione allo stato 20
    DOUBLE    shift e prosecuzione allo stato 21
    INTEGER   shift e prosecuzione allo stato 22
    LOGNOT    shift e prosecuzione allo stato 23
    '('       shift e prosecuzione allo stato 24
    '+'       shift e prosecuzione allo stato 25
    '-'       shift e prosecuzione allo stato 26
    '!'       shift e prosecuzione allo stato 27

    primary_expression         prosecuzione allo stato 28
    postfix_expression         prosecuzione allo stato 29
    unary_expression           prosecuzione allo stato 30
    multiplicative_expression  prosecuzione allo stato 31
    additive_expression        prosecuzione allo stato 32
    relational_expression      prosecuzione allo stato 33
    equality_expression        prosecuzione allo stato 34
    logical_and_expression     prosecuzione allo stato 35
    logical_or_expression      prosecuzione allo stato 36
    logical_xor_expression     prosecuzione allo stato 37
    conditional_expression     prosecuzione allo stato 38
    expression                 prosecuzione allo stato 90


Stato 69

   12 symbol_list: symbol_list ',' SYMBOL .

    $default  riduzione con la regola 12 (symbol_list)


Stato 70

    9 node_attr_decl: symbol_istate_list '.' SYMBOL '=' . istate_expression_list ';'

    VARIABLE  shift e prosecuzione allo stato 19
    DOUBLE    shift e prosecuzione allo stato 21
    INTEGER   shift e prosecuzione allo stato 22
    '('       shift e prosecuzione allo stato 24

    istate_expression_list  prosecuzione allo stato 91
    istate_expression       prosecuzione allo stato 92
    primary_expression      prosecuzione allo stato 93


Stato 71

   27 postfix_expression: SYMBOL '(' ')' .

    $default  riduzione con la regola 27 (postfix_expression)


Stato 72

   24 argument_expression_list: argument_expression_list . ',' expression
   26 postfix_expression: SYMBOL '(' argument_expression_list . ')'

    ','  shift e prosecuzione allo stato 94
    ')'  shift e prosecuzione allo stato 95


Stato 73

   23 argument_expression_list: expression .

    $default  riduzione con la regola 23 (argument_expression_list)


Stato 74

   22 primary_expression: '(' expression ')' .

    $default  riduzione con la regola 22 (primary_expression)


Stato 75

   34 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  riduzione con la regola 34 (multiplicative_expression)


Stato 76

   35 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  riduzione con la regola 35 (multiplicative_expression)


Stato 77

   34 multiplicative_expression: multiplicative_expression . '*' unary_expression
   35                          | multiplicative_expression . '/' unary_expression
   37 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift e prosecuzione allo stato 51
    '/'  shift e prosecuzione allo stato 52

    $default  riduzione con la regola 37 (additive_expression)


Stato 78

   34 multiplicative_expression: multiplicative_expression . '*' unary_expression
   35                          | multiplicative_expression . '/' unary_expression
   38 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift e prosecuzione allo stato 51
    '/'  shift e prosecuzione allo stato 52

    $default  riduzione con la regola 38 (additive_expression)


Stato 79

   37 additive_expression: additive_expression . '+' multiplicative_expression
   38                    | additive_expression . '-' multiplicative_expression
   43 relational_expression: relational_expression GTEQ additive_expression .

    '+'  shift e prosecuzione allo stato 53
    '-'  shift e prosecuzione allo stato 54

    $default  riduzione con la regola 43 (relational_expression)


Stato 80

   37 additive_expression: additive_expression . '+' multiplicative_expression
   38                    | additive_expression . '-' multiplicative_expression
   42 relational_expression: relational_expression LTEQ additive_expression .

    '+'  shift e prosecuzione allo stato 53
    '-'  shift e prosecuzione allo stato 54

    $default  riduzione con la regola 42 (relational_expression)


Stato 81

   37 additive_expression: additive_expression . '+' multiplicative_expression
   38                    | additive_expression . '-' multiplicative_expression
   40 relational_expression: relational_expression '<' additive_expression .

    '+'  shift e prosecuzione allo stato 53
    '-'  shift e prosecuzione allo stato 54

    $default  riduzione con la regola 40 (relational_expression)


Stato 82

   37 additive_expression: additive_expression . '+' multiplicative_expression
   38                    | additive_expression . '-' multiplicative_expression
   41 relational_expression: relational_expression '>' additive_expression .

    '+'  shift e prosecuzione allo stato 53
    '-'  shift e prosecuzione allo stato 54

    $default  riduzione con la regola 41 (relational_expression)


Stato 83

   40 relational_expression: relational_expression . '<' additive_expression
   41                      | relational_expression . '>' additive_expression
   42                      | relational_expression . LTEQ additive_expression
   43                      | relational_expression . GTEQ additive_expression
   45 equality_expression: equality_expression EQUAL relational_expression .

    GTEQ  shift e prosecuzione allo stato 55
    LTEQ  shift e prosecuzione allo stato 56
    '<'   shift e prosecuzione allo stato 57
    '>'   shift e prosecuzione allo stato 58

    $default  riduzione con la regola 45 (equality_expression)


Stato 84

   40 relational_expression: relational_expression . '<' additive_expression
   41                      | relational_expression . '>' additive_expression
   42                      | relational_expression . LTEQ additive_expression
   43                      | relational_expression . GTEQ additive_expression
   46 equality_expression: equality_expression NOT_EQUAL relational_expression .

    GTEQ  shift e prosecuzione allo stato 55
    LTEQ  shift e prosecuzione allo stato 56
    '<'   shift e prosecuzione allo stato 57
    '>'   shift e prosecuzione allo stato 58

    $default  riduzione con la regola 46 (equality_expression)


Stato 85

   45 equality_expression: equality_expression . EQUAL relational_expression
   46                    | equality_expression . NOT_EQUAL relational_expression
   48 logical_and_expression: logical_and_expression LOGAND equality_expression .

    EQUAL      shift e prosecuzione allo stato 59
    NOT_EQUAL  shift e prosecuzione allo stato 60

    $default  riduzione con la regola 48 (logical_and_expression)


Stato 86

   48 logical_and_expression: logical_and_expression . LOGAND equality_expression
   50 logical_or_expression: logical_or_expression LOGOR logical_and_expression .

    LOGAND  shift e prosecuzione allo stato 61

    $default  riduzione con la regola 50 (logical_or_expression)


Stato 87

   50 logical_or_expression: logical_or_expression . LOGOR logical_and_expression
   52 logical_xor_expression: logical_xor_expression LOGXOR logical_or_expression .

    LOGOR  shift e prosecuzione allo stato 62

    $default  riduzione con la regola 52 (logical_xor_expression)


Stato 88

   50 logical_or_expression: logical_or_expression . LOGOR logical_and_expression
   53 logical_xor_expression: logical_xor_expression '^' logical_or_expression .

    LOGOR  shift e prosecuzione allo stato 62

    $default  riduzione con la regola 53 (logical_xor_expression)


Stato 89

   55 conditional_expression: logical_xor_expression '?' expression . ':' conditional_expression

    ':'  shift e prosecuzione allo stato 96


Stato 90

    8 node_attr_decl: SYMBOL '.' SYMBOL '=' expression . ';'

    ';'  shift e prosecuzione allo stato 97


Stato 91

    9 node_attr_decl: symbol_istate_list '.' SYMBOL '=' istate_expression_list . ';'
   14 istate_expression_list: istate_expression_list . ',' istate_expression

    ';'  shift e prosecuzione allo stato 98
    ','  shift e prosecuzione allo stato 99


Stato 92

   13 istate_expression_list: istate_expression .

    $default  riduzione con la regola 13 (istate_expression_list)


Stato 93

   15 istate_expression: primary_expression . '[' expression_list ']'

    '['  shift e prosecuzione allo stato 100


Stato 94

   24 argument_expression_list: argument_expression_list ',' . expression

    VARIABLE  shift e prosecuzione allo stato 19
    SYMBOL    shift e prosecuzione allo stato 20
    DOUBLE    shift e prosecuzione allo stato 21
    INTEGER   shift e prosecuzione allo stato 22
    LOGNOT    shift e prosecuzione allo stato 23
    '('       shift e prosecuzione allo stato 24
    '+'       shift e prosecuzione allo stato 25
    '-'       shift e prosecuzione allo stato 26
    '!'       shift e prosecuzione allo stato 27

    primary_expression         prosecuzione allo stato 28
    postfix_expression         prosecuzione allo stato 29
    unary_expression           prosecuzione allo stato 30
    multiplicative_expression  prosecuzione allo stato 31
    additive_expression        prosecuzione allo stato 32
    relational_expression      prosecuzione allo stato 33
    equality_expression        prosecuzione allo stato 34
    logical_and_expression     prosecuzione allo stato 35
    logical_or_expression      prosecuzione allo stato 36
    logical_xor_expression     prosecuzione allo stato 37
    conditional_expression     prosecuzione allo stato 38
    expression                 prosecuzione allo stato 101


Stato 95

   26 postfix_expression: SYMBOL '(' argument_expression_list ')' .

    $default  riduzione con la regola 26 (postfix_expression)


Stato 96

   55 conditional_expression: logical_xor_expression '?' expression ':' . conditional_expression

    VARIABLE  shift e prosecuzione allo stato 19
    SYMBOL    shift e prosecuzione allo stato 20
    DOUBLE    shift e prosecuzione allo stato 21
    INTEGER   shift e prosecuzione allo stato 22
    LOGNOT    shift e prosecuzione allo stato 23
    '('       shift e prosecuzione allo stato 24
    '+'       shift e prosecuzione allo stato 25
    '-'       shift e prosecuzione allo stato 26
    '!'       shift e prosecuzione allo stato 27

    primary_expression         prosecuzione allo stato 28
    postfix_expression         prosecuzione allo stato 29
    unary_expression           prosecuzione allo stato 30
    multiplicative_expression  prosecuzione allo stato 31
    additive_expression        prosecuzione allo stato 32
    relational_expression      prosecuzione allo stato 33
    equality_expression        prosecuzione allo stato 34
    logical_and_expression     prosecuzione allo stato 35
    logical_or_expression      prosecuzione allo stato 36
    logical_xor_expression     prosecuzione allo stato 37
    conditional_expression     prosecuzione allo stato 102


Stato 97

    8 node_attr_decl: SYMBOL '.' SYMBOL '=' expression ';' .

    $default  riduzione con la regola 8 (node_attr_decl)


Stato 98

    9 node_attr_decl: symbol_istate_list '.' SYMBOL '=' istate_expression_list ';' .

    $default  riduzione con la regola 9 (node_attr_decl)


Stato 99

   14 istate_expression_list: istate_expression_list ',' . istate_expression

    VARIABLE  shift e prosecuzione allo stato 19
    DOUBLE    shift e prosecuzione allo stato 21
    INTEGER   shift e prosecuzione allo stato 22
    '('       shift e prosecuzione allo stato 24

    istate_expression   prosecuzione allo stato 103
    primary_expression  prosecuzione allo stato 93


Stato 100

   15 istate_expression: primary_expression '[' . expression_list ']'

    VARIABLE  shift e prosecuzione allo stato 19
    DOUBLE    shift e prosecuzione allo stato 21
    INTEGER   shift e prosecuzione allo stato 22
    '('       shift e prosecuzione allo stato 24

    expression_list     prosecuzione allo stato 104
    primary_expression  prosecuzione allo stato 105


Stato 101

   24 argument_expression_list: argument_expression_list ',' expression .

    $default  riduzione con la regola 24 (argument_expression_list)


Stato 102

   55 conditional_expression: logical_xor_expression '?' expression ':' conditional_expression .

    $default  riduzione con la regola 55 (conditional_expression)


Stato 103

   14 istate_expression_list: istate_expression_list ',' istate_expression .

    $default  riduzione con la regola 14 (istate_expression_list)


Stato 104

   15 istate_expression: primary_expression '[' expression_list . ']'
   17 expression_list: expression_list . ',' primary_expression

    ']'  shift e prosecuzione allo stato 106
    ','  shift e prosecuzione allo stato 107


Stato 105

   16 expression_list: primary_expression .

    $default  riduzione con la regola 16 (expression_list)


Stato 106

   15 istate_expression: primary_expression '[' expression_list ']' .

    $default  riduzione con la regola 15 (istate_expression)


Stato 107

   17 expression_list: expression_list ',' . primary_expression

    VARIABLE  shift e prosecuzione allo stato 19
    DOUBLE    shift e prosecuzione allo stato 21
    INTEGER   shift e prosecuzione allo stato 22
    '('       shift e prosecuzione allo stato 24

    primary_expression  prosecuzione allo stato 108


Stato 108

   17 expression_list: expression_list ',' primary_expression .

    $default  riduzione con la regola 17 (expression_list)
